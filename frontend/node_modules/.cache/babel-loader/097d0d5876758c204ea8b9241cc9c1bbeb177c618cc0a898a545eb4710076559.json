{"ast":null,"code":"var _jsxFileName = \"/Users/balaji-9617/Documents/IntelliJ/myproject/Reacttictaktok/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./index.css\";\nimport Player from './components/player/Player';\nimport GameBoard from \"./components/board/GameBoard\";\nimport { useState } from 'react';\nimport MoveHistory from './components/history/MoveHistory';\nimport { combinations } from './components/winner/WinnningCombination';\nimport Result from './components/winner/Result';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst board = [[null, null, null], [null, null, null], [null, null, null]];\nfunction getCurrentSymbol(moves) {\n  let symbol = 'X';\n  if (moves.length !== 0 && moves[0].currsymbol === 'X') {\n    symbol = 'O';\n  }\n  return symbol;\n}\nfunction getWinner() {\n  for (let combination of combinations) {\n    let symbol1 = board[combination[0].row][combination[0].col];\n    let symbol2 = board[combination[1].row][combination[1].col];\n    let symbol3 = board[combination[2].row][combination[2].col];\n    if (symbol1 && symbol1 === symbol2 && symbol1 === symbol3) {\n      return symbol1;\n    }\n  }\n  return null;\n}\nfunction App() {\n  _s();\n  const [moves, setMoves] = useState([]);\n  const [player1, setPlayer1] = useState('Player 1');\n  const [player2, setPlayer2] = useState('Player 2');\n  let cSymbol = getCurrentSymbol(moves);\n  let WINNER = getWinner();\n  let DRAW = !WINNER && moves.length === 9 ? true : false;\n  for (let move of moves) {\n    board[move.pos.row][move.pos.col] = move.currsymbol;\n  }\n  function updateCurrMove(rowIndex, colIndex) {\n    setMoves(moves => {\n      return [{\n        pos: {\n          row: rowIndex,\n          col: colIndex\n        },\n        currsymbol: cSymbol\n      }, ...moves];\n    });\n  }\n  function updatePlayer(player, symbol) {\n    symbol === 'X' ? setPlayer1(player) : setPlayer2(player);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"menu\", {\n        children: WINNER || DRAW ? /*#__PURE__*/_jsxDEV(Result, {\n          winner: WINNER && WINNER === 'X' ? player1 : player2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-container\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            id: \"players\",\n            children: [/*#__PURE__*/_jsxDEV(Player, {\n              name: player1,\n              symbol: \"X\",\n              isActive: cSymbol === \"X\",\n              nameUpdate: updatePlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Player, {\n              name: player2,\n              symbol: \"O\",\n              isActive: cSymbol === \"O\",\n              nameUpdate: updatePlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n              currBoard: board,\n              updateMove: updateCurrMove\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"menu\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"move-history\",\n          children: /*#__PURE__*/_jsxDEV(MoveHistory, {\n            currMove: moves\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"Cw5yxxpI3/wLn8IkjYXDH8QwWVs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Player","GameBoard","useState","MoveHistory","combinations","Result","jsxDEV","_jsxDEV","Fragment","_Fragment","board","getCurrentSymbol","moves","symbol","length","currsymbol","getWinner","combination","symbol1","row","col","symbol2","symbol3","App","_s","setMoves","player1","setPlayer1","player2","setPlayer2","cSymbol","WINNER","DRAW","move","pos","updateCurrMove","rowIndex","colIndex","updatePlayer","player","children","winner","fileName","_jsxFileName","lineNumber","columnNumber","className","id","name","isActive","nameUpdate","currBoard","updateMove","currMove","_c","$RefreshReg$"],"sources":["/Users/balaji-9617/Documents/IntelliJ/myproject/Reacttictaktok/src/App.js"],"sourcesContent":["import \"./index.css\"\nimport Player from './components/player/Player';\nimport GameBoard from \"./components/board/GameBoard\"\nimport { useState } from 'react';\nimport MoveHistory from './components/history/MoveHistory';\nimport {combinations} from './components/winner/WinnningCombination'\nimport Result from './components/winner/Result';\n\nconst board = [\n  [null,null,null],\n  [null,null,null],\n  [null,null,null]\n]\n\nfunction getCurrentSymbol(moves)\n{\n    let symbol = 'X'\n\n    if(moves.length!==0 && moves[0].currsymbol==='X')\n    {\n      symbol = 'O'\n    }\n\n    return symbol\n}\n\nfunction getWinner()\n{\n  for(let combination of combinations)\n  {\n     let symbol1 = board[combination[0].row][combination[0].col]\n     let symbol2 = board[combination[1].row][combination[1].col]\n     let symbol3 = board[combination[2].row][combination[2].col]\n    \n     if(symbol1 && symbol1===symbol2 && symbol1===symbol3)\n     {\n        return symbol1\n     }\n\n  }\n    return null;\n}\n\n\n\nfunction App() \n{\n\n  const[moves,setMoves] = useState([])\n  const[player1,setPlayer1] = useState('Player 1')\n  const[player2,setPlayer2] = useState('Player 2')\n\n  let cSymbol = getCurrentSymbol(moves)\n\n  let WINNER = getWinner();\n\n  let DRAW = (!WINNER && moves.length===9) ? true : false\n\n  for(let move of moves)\n  {\n    board[move.pos.row][move.pos.col] = move.currsymbol\n  }\n\n\n  function updateCurrMove(rowIndex,colIndex)\n  {\n    setMoves((moves)=>{return [{pos:{row:rowIndex,col:colIndex},currsymbol:cSymbol},...moves]})\n  }\n\n\n  function updatePlayer(player,symbol)\n  {\n     symbol === 'X' ? setPlayer1(player) :setPlayer2(player);\n  }\n\n  return (\n    <>\n      <section>\n      <menu>\n        {WINNER || DRAW ? <Result winner={WINNER && WINNER==='X'?player1:player2}/> :\n        <div className=\"game-container\">\n          <ol id=\"players\">\n            <Player name={player1} symbol=\"X\" isActive={cSymbol===\"X\"} nameUpdate={updatePlayer}/>\n            <Player name={player2} symbol=\"O\" isActive={cSymbol===\"O\"} nameUpdate={updatePlayer}/>   \n            <GameBoard currBoard={board} updateMove={updateCurrMove} />\n          </ol>\n        </div>}\n      </menu>\n      <menu>\n        <div className=\"move-history\">\n            <MoveHistory currMove={moves}/>\n        </div>\n      </menu>\n    </section>\n    \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}