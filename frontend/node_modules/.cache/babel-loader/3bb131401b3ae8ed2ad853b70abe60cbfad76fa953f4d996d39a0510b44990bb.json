{"ast":null,"code":"var _jsxFileName = \"/Users/balaji-9617/Documents/IntelliJ/myproject/Reacttictaktok/src/components/player/Player.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  name,\n  symbol\n}) {\n  _s();\n  const [isEdit, setIsEdit] = useState(false);\n  function updatePlayer(val) {\n    setIsEdit(val);\n  }\n  function setName(e) {\n    name = e.target.value;\n  }\n  function setSymbol(e) {\n    symbol = e.target.value;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [!isEdit && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"player-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"player-symbol\",\n          children: symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updatePlayer(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), isEdit && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: name,\n          onChange: setName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: symbol,\n          onChange: setSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updatePlayer(false),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n_s(Player, \"GT2ZTZxiA7JqVnPbNZqRsoQTJUA=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","name","symbol","_s","isEdit","setIsEdit","updatePlayer","val","setName","e","target","value","setSymbol","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/balaji-9617/Documents/IntelliJ/myproject/Reacttictaktok/src/components/player/Player.jsx"],"sourcesContent":["import { useState } from \"react\"\n\nexport default function Player({name,symbol})\n{\n    const[isEdit,setIsEdit] = useState(false)\n    \n\n    function updatePlayer(val)\n    {\n        setIsEdit(val)\n    }\n\n    function setName(e)\n    {\n        name = e.target.value\n    }\n\n    function setSymbol(e)\n    {\n        symbol = e.target.value\n    }\n\n    return <>\n       <li>\n        {!isEdit && <span className='player'>\n                <span className='player-name'>{name}</span>\n                <span className='player-symbol'>{symbol}</span>\n                <button onClick={()=>updatePlayer(true)}>Edit</button>\n              </span>}\n        \n        {isEdit && <span className='player'>\n                <input type=\"text\" placeholder={name} onChange={setName}/>\n                <input type=\"text\" placeholder={symbol} onChange={setSymbol}/>\n                <button onClick={()=>updatePlayer(false)}>Save</button>\n              </span>}\n              \n              \n        </li> \n    </>\n}\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,eAAe,SAASC,MAAMA,CAAC;EAACC,IAAI;EAACC;AAAM,CAAC,EAC5C;EAAAC,EAAA;EACI,MAAK,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAGzC,SAASW,YAAYA,CAACC,GAAG,EACzB;IACIF,SAAS,CAACE,GAAG,CAAC;EAClB;EAEA,SAASC,OAAOA,CAACC,CAAC,EAClB;IACIR,IAAI,GAAGQ,CAAC,CAACC,MAAM,CAACC,KAAK;EACzB;EAEA,SAASC,SAASA,CAACH,CAAC,EACpB;IACIP,MAAM,GAAGO,CAAC,CAACC,MAAM,CAACC,KAAK;EAC3B;EAEA,oBAAOd,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACJhB,OAAA;MAAAgB,QAAA,GACE,CAACT,MAAM,iBAAIP,OAAA;QAAMiB,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBAC5BhB,OAAA;UAAMiB,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAEZ;QAAI;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CrB,OAAA;UAAMiB,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAEX;QAAM;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/CrB,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAIb,YAAY,CAAC,IAAI,CAAE;UAAAO,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,EAEZd,MAAM,iBAAIP,OAAA;QAAMiB,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBAC3BhB,OAAA;UAAOuB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAEpB,IAAK;UAACqB,QAAQ,EAAEd;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC1DrB,OAAA;UAAOuB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAEnB,MAAO;UAACoB,QAAQ,EAAEV;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC9DrB,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAIb,YAAY,CAAC,KAAK,CAAE;UAAAO,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGT;EAAC,gBACP,CAAC;AACP;AAACf,EAAA,CArCuBH,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}